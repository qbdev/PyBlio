# # Python CircleCI 2.0 configuration file
# #
# # Check https://circleci.com/docs/2.0/language-python/ for more details
# #
version: 2.1
executors:

  python:
    parameters:
      tag:
        type: string
        default: latest
    docker:
      - image: circleci/python:<< parameters.tag >>
        - environment: # environment variables for primary container
            PIPENV_VENV_IN_PROJECT: true
    working_directory: ~/PyBlio

commands:

  docker-prereqs:
    description: Set up docker prerequisite requirement
    steps:
      - run: mkdir test-reports
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python3.7/site-packages
      - restore_cache:
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          key: deps9-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
      - run:
          command: |
            sudo pip install pipenv
            pipenv install
      - save_cache: # cache Python dependencies using checksum of Pipfile as the cache-key
          key: deps9-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
          paths:
            - ".venv"
            - "/usr/local/bin"
            - "/usr/local/lib/python3.7/site-packages"

jobs:
  static-check:
    executor:
      name: python
      tag: 3.7.4

    steps:
      - checkout
      - docker-prereqs
      - run:
          name: run mypy
          command: |
            pipenv run mypy --ignore-missing-imports core tests
      - run:
           name: run pylint
           command: |
             pipenv run pylint core tests
      - store_test_results: # Upload test results for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
           path: test-results
      - store_artifacts: # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
           path: test-results
           destination: test-results

  pytest_and_coverage:
    executor:
      name: python
      tag: 3.7.4

      steps:
        - checkout
        - docker-prereqs
        - run:
            name: run pytest
            command: |
              pipenv run pytest
              pipenv run pytest --cov=core tests/
              pipenv run coverage html
              pipenv run coveralls
        - store_test_results: # Upload test results for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
              path: test-results
        - store_artifacts: # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
              path: test-results
              destination: test-results

workflows:
  version: 2
  build:
    jobs:
      - pytest_and_coverage:
          filters:
            branches:
              only: develop
          python: 3.7.4
      - static-check:
          filters:
            branches:
              only: develop
          python: 3.7.4